# criando um chatboot
# import
import openai
# chave
apenai.api_key = "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"
# função para gerar um texto a partir do modelo de linguagem 
response = openai.Completion.create(
	# modelo usado
	engine = "text-davinci-003" ,
	# Texto inicial da conversa com chatbot
	# comprimento da resposta gerada pelo modelo.
	max_tokens = 150,
	# Quantas conclusões gerar para cad prompt.
	n = 5,
	#O texto retornado não conterá a sequencia de parada.
	stop = None,
	# Uma medida de aleatoriedade de um texto gerado pelo modelo. Seu valor está entre 0 e 1.
	# Valores próximos a 1 signficam que a saída é mais aleatória, enquanto valores próximos a 0 significam que a saída é muito identificável.
	temperature = 0.8,
)
return response.choices[0].text.strip()
#função principal do programa em Python
def main():
	print("\nBem-vindo ao GPT-4 Chatbot!")
	print("Digite 'sair' a qualquer momento para encerrar o chat.")
	
	# loop
	while True:

	#coleta a pergunta digitada pelo usuário.
	user_mensage = input("\Você: ")
	
	# Se a mensagem for 'sair' finaliza o programa.
	if user_mensage.lower() == "sair":
		break

	# Coloca a mensagem digitada pelo usuário na variável Python chamada gpt44_prompt.
	gpt4_prompt = f"\nUsuário: {user_message}\nChatbot:"

	# Obtém a resposta do modelo executando a função gera_texto().
	Chatbot_resonde = gera_texto(gpt4_prompt)

	# Imprime a resposta do chatbot.
	print(f"\nChatbot: {chatbot_response}")

# Execução do programa (bloco main) em Python
if__name__ == "__main__":
	main()